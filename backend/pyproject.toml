[tool.poetry]
name = "minerva"
version = "0.1.0"
description = ""
authors = ["bartosz121 <bmagiera121@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.110.0"
pydantic-settings = "^2.2.1"
uvicorn = { extras = ["all"], version = "^0.29.0" }
httptools = "^0.6.1"
uvloop = "^0.19.0"
sqlalchemy = { extras = ["asyncio"], version = "^2.0.28" }
asyncpg = "^0.29.0"
alembic = "^1.13.1"
logfire = "^0.22.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-env = "^1.1.3"
coverage = "^7.4.4"
faker = "^24.3.0"
asgi-lifespan = "^2.1.0"
ruff = { version = "^0.3.4", allow-prereleases = true }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# https://docs.astral.sh/ruff/rules/
[tool.ruff]
target-version = "py37"
line-length = 120
select = [
    "A",
    "ARG",
    "B",
    "C90",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "LOG",
    "N",
    "PL",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
]
ignore = []
unfixable = []

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 60

[tool.ruff.isort]
known-first-party = ["minerva"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.pytest.ini_options]
asyncio_mode = "auto"
env = ["APP_ENVIRONMENT=TESTING", "DB_DATABASE="]
